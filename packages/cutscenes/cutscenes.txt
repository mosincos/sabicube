This cutscene system has been adapted from the one developed for sandbox's RPG module.
It has been bastardised as well and does not function identically.

notable differences include
1) the camera is not reset before cutscene commands are executed
2) cutscenes cannot be cancelled (they can be interrupted by changing map)
3) cutscenes are initiated immediately, the commands aren't queued in a set of cutscenes and executed as needed.
4) there is no "post" commands for cutscenes
5) there is no r_ prefix to the commands

otherwise, function is identical


Entities
========
The mod introduced a camera entity, the attributes are in the following order
tag yaw pitch roll

tag refers to a numerical tag or index which identifies the camera uniquely. if there are duplicates the first instance will be selected.

Player Lookups
==============
Viewport and Focus require a dynent to function. Lookups for these are done via client number, in otherwords exactly like spectator, follow, setteam, kick, etc.

Recommended Use
===============
Since this isn't sandbox, I'd recommend storing the instructions in a cfg and executing it when desired.
I would also suggest recording a demo and catering this to the demo.

Variables
=========
dmgcamera 0 0 1
when set to true, draws misc debug information on screen

Commands
========
cutscene_delay duration successors
- initiates successors after the duration has expired
eg: cutscene_delay 1000 [ cutscene_subtitle ... ]

cutscene_cond condition successors
- tests for the condition on every update, successors are initiated when the condition is true
eg cutscene_cond [ > (rnd 1000) 990 ] [ cutscene_subtitle ... ]

cutscene_loop condition limit delay body
- executes the body whilst the condition is true or the amount of iterations is under the limit. when hte limit is 0, there is no limit and if the condition is always true, then the loop is infinite. delay defines the pause between executions
eg cutscene_loop 1 0 100 [ cutscene_subtitle (getmillis) ... ]

cutscene_subtitle text red green blue duration successors
- text is automatically adjusted to fit onto screen and to cater to multiple simultaneous instances
eg cutscene_subtitle "I can't beleive it's not butter!" 1 1 0 1000

cutscene_move(accel)camera tag duration successors
- the tag refers to the camera's tag. The accel variant uses a sine function as opposed to a linear one. This action moves to a camera's origin
eg cutscene_moveaccelcamera 0 1000

cutscene_move(accel)specific x-delta y-delta z-delta duration successors
- deltas are differences to the current position
eg cutscene_movespecific 0 0 500 1000

cutscene_view(accel)camera tag duration sucessors
- adopts the yaw, pitch and roll of the specified camera
eg cutscene_viewcamera 0 1000

cutscene_view(accel)specific yaw pitch roll duration successors
- adopts the specified yaw pitch and roll over time
eg cutscene_viewaccelspecific 90 0 45 500

cutscene_viewspin yaw pitch roll duration successors
- adjusts the view of the camera by the amounts provided over time
eg cutscene_viewspin 90 0 0 500

cutscene_sound index duration successors - UNTESTED
- plays the sound implicated by a registersound index. If the sound is longer than the alloted time it is cut short.
eg cutscene_sound $my_sample 1000

cutscene_soundfile file duration successors - UNTESTED
- like the above, but you specify a file name instead of a registersound index
cutscene_soundfile my_sound.ogg 1000

cutscene_overlay texture red green blue alpha fade duration successors
- draws a stretched overlay on the screen. Fade is the time the overlay takes to fade in and out.
eg cutscene_overlay my_overlay.png 1 1 1 .5 1000 5000

cutscene_solid modulate reg green blue alpha fade duration successors
- draws a quad over the screen. If modulate is true the blend mode will be changed to modulate the colours on screen as opposed to drawing a solid.
eg cutscene_solid 1 1 .5 .5 1 1000 5000

cutscene_viewport player height tail duration successors
- see above for player identification purposes. The height is a vertical offset behind the player and tail is a horizontal one, unfortunately it currently places you in front instead of behind.
eg cutscene_viewport Hirato 8 -20 2000

cutscene_focus player interpolation lead duration successors
- the ideal position is calculated via player->origin + player->velocity * lead. The camera interpolates to this point, the value of interpolation determines how quickly the camera focuses on the player.
eg cutscene_focus Hirato 5 2 1000







